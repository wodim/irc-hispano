/*
 * $Id: example.conf 386 2011-01-04 17:16:43Z hal9000 $
 * (c) 2004-2011 Denora Team
 * Contact us at info@denorastats.org
 *
 * Denora configuration file (Example)
 * *************************
 *
 * After making the appropriate changes to this file, place it in the
 * Denora data directory (as specified in the "Config" script, default
 * /usr/local/lib/denora) under the name "denora.conf".
 *
 * The configuration format consists of blocks, each containing name-value
 * pairs, tags, or string data.  It is designed to be easily readable by
 * both human beings and Denora.
 * 
 * A block consists of a block name, an opening '{' brace, statements, a
 * closing '}' brace, and a ';' semicolon.  A statement consists of a
 * name, possibly followed by a value, and ending with a semicolon.
 * Strings that contain special characters or whitespace can be surrounded
 * by '"' double quotes.  All elements of the configuration are separated
 * by whitespace, and can be packed on one line, or broken up over several
 * lines.
 */
 
 # Comments are supported in three forms:
     /* C style
        multi-line */
     # shell style single-line
     // C++ style single-line

/*
 * A sample block:
 * 
 *     block {
 *         name value;            # A statement with a name value
 *         name 123;              # A statement with a number value
 *         name "hello world";    # A statement with a string value
 *         tag;                   # A simple tag
 *         "will code for food";  # A simple string
 *     };
 * 
 * You can also use an include directive outside of a block context, if
 * you want to split up your configuration in several files:
 * 
 *     include path/to/file.conf;
 *
 * In the documentation for each directive, one of the following will be
 * included to indicate whether an option is required:
 *
 * [REQUIRED]
 *    Indicates a block which must be given
 *    Without it, Denora will not start.
 *
 * [RECOMMENDED]
 *    Indicates a block which may be omitted, but omitting it may cause
 *    undesirable side effects.
 *
 * [OPTIONAL]
 *    Indicates a block which is optional. If not given, the feature
 *    will typically be disabled.  If this is not the case, more
 *    information will be given in the documentation.
 *
 * NOTE: unless other specified, there may be only one block with the
 *       same name.
 */


###########################################################################
# Connect [REQUIRED]
#   Information needed for Denora to connect to the uplink server.
#
# Required tokens:
#  hostname    - Remote server hostname
#                This must either be a standard Internet hostname
#                or dotted-quad numeric address
#                This may be overridden at runtime with the "-remote"
#                command-line option.
#  port        - Remote server port
#                This must be an integer between 1 and 65535
#  passwd      - Password to send to the uplink server
#                The password is a string which should be enclosed in
#                double quotes if it contains any spaces
#                This may be overridden at runtime with the "-remote"
#                command-line option.
#  protocol    - IRCd protocol to use.
#                Choose one of the following, depending on your ircd:
#                  Asuka IRCu             : asuka
#                  Bahamut 1.4 and 1.8    : bahamut
#                  Charybdis 1.0          : charybdis
#                  Hybrid 7.0             : hybrid
#                  Hyperion/DancerIRCD    : hyperion
#                  inspircd 1.1           : inspircd11
#                  inspircd 1.2-2.0       : inspircd12
#                  ircu 2.10.11+          : ircu
#                  Nefarious IRCu 1.0-1.2 : nefarious
#                  Nefarious IRCu 1.3     : nefarious13
#                  ngIRCD 0.9.1 IRCD      : ngircd
#                  Plexus 3               : plexus3
#                  Ratbox 2.0             : ratbox
#                  ScaryNet 2.10.11.x     : scarynet
#                  SolidIRCD              : solidircd
#                  Ultimate 3.0           : ultimate3
#                  Unreal 3.2             : unreal32
#
# Optional tokens:
#  bindhost    - IP to connect from
#                This pecifies the local address to bind to before
#                connecting to the remote server. This may be useful
#                on multihomed hosts. If this is not specified, Stats
#                will let the operating system choose the local address.
#  bindport    - Port number to connect from
#                If only a bindhost is specified, Stats will bind to that
#                address but let the operating system choose the local
#                port number.
#  quitprefix  - IRCd quit prefix (case sensitive!)
#                This is used by Denora to parse Quit messages in order to
#                detect Local kills from IRCds which don't send a specific
#                KILL event, like Unreal32.
#                Common prefixes:
#                  Asuka IRCu       : "Quit"
#                  Bahamut 1.8.x    : "Quit:"
#                  InspIRCd 1.1.x   : "Quit:"
#                  ircu 2.10.11+    : "Quit"
#                  Nefarious IRCu   : "Quit"
#                  UnrealIRCd 3.2.x : "Quit:"

connect {
    // required tokens
    hostname    localhost;
    port        8067;
    passwd      "mypass";
    protocol    unreal32;

    // optional tokens
    #bindhost    nowhere;
    #bindport    0;
    #quitprefix  "Quit:";
};

###########################################################################
# Identity [REQUIRED]
#   Stats identity information.
#
# Required tokens:
#  name        - Stats server name
#                This specifies the IRC server name which Denora should
#                use. May be overridden by the -name command-line option.
#  desc        - Stats server description
#                This specifies the text which should appear as the
#                server's information in /whois and similar queries.
#                May be overridden by the -desc command-line option.
#  user        - Stats pseudo username
#                This specifies the user@host mask which should be used by
#                the Stats pseudoclients. May be overridden by the -user
#                and -host command-line options.
#  language    - Default language
#                Currently supported languages:
#                  English    : 1
#                  Spanish    : 2
#                  German     : 3
#                  French     : 4
#                  Dutch      : 5
#                  Italian    : 6
#                  Russian    : 7
#                  Portuguese : 8
#                If you want to know how to translate Denora in your
#                language, read the chapter about it in the README.

identity {
    // required tokens
    name        "stats.localhost.net";
    desc        "Statistics for IRC Networks";
    user        "stats@localhost.net";
    language    1;
};

###########################################################################
# StatServ [REQUIRED]
#   Specify the nickname and "real" name for the Stats pseudoclient.
#
# Required tokens:
#  nick        - Bot nickname
#                The nickname the pseudo client (bot) will have
#  real        - Bot realname
#                The realname the pseudo client (bot) will have
#
# Optional tokens:
#  aliasnick   - Optional alias nickname
#                When a user will /msg "aliasnick" something, it will be
#                forwarded to "nick", and "nick" will answer. This can be
#                used to ease the migration from another network, for
#                example if your stats are called StatsManager and the
#                other network calls them StatServ.
#  aliasreal   - Optional alias realname
#                Same as "real", but for "aliasnick"
#  autoop      - Makes the bot get mode +o on channels
#  automode    - autoop mode
#                If autoop is enabled, this allows you to specify the
#                mode(s) the bot will get, default is "+o"
#  partonempty - Makes the bot part empty channels

statserv {
    // required tokens
    nick        "StatServ";
    real        "Stats Server";

    // optional tokens
    #aliasnick   "StatServ2";
    #aliasreal   "Stats Server Forwarder";
    #autoop;
    #automode    "+ov";
    #partonempty;
};

###########################################################################
# Filenames [REQUIRED]
#   NOTE: All filenames are relative to the Stats data directory.
#
# Required tokens:
#  pid         - File containing Stats' process ID
#  motd        - Name of the Message of the Day file
#  channeldb   - Flat DB file for channel data.
#  ctcpdb      - Flat DB file for ctcp data.
#  serverdb    - Flat DB file for server data.
#  chanstatsdb - Flat DB file for channel stats data.
#  tlddb       - Flat DB file for tld data.
#  excludedb   - Flat DB file for exclude data.
#  statsdb     - Flat DB file for network data.
#  admindb     - Flat DB file for admin data.
#
# Optional tokens:
#  htmlfile    - Path to the HTML file
#                If set, this will enable Denora to write stats to html
#                Please specify a complete path contained in doublequotes

filenames {
    // required tokens
    pid         stats.pid;
    motd        stats.motd;
    channeldb   chan.db;
    ctcpdb      ctcp.db;
    serverdb    server.db;
    chanstatsdb ChannelStats.db;
    tlddb       tld.db;
    excludedb   exclude.db;
    statsdb     stats.db;
    admindb     admin.db;

    // optional tokens
    #htmlfile    "/home/denora/denora.html";
};

###########################################################################
# Backup [RECOMMENDED]
#   Specify information on when Denora will do backups of the .db files
#
# Required tokens:
#  keepbackups - Enable backups
#  freq        - Time between making a backup
#  keepfor     - Time to keep the backups

backup {
    // required tokens
    keepbackups;
    freq         1d;
    keepfor      7d;
};

###########################################################################
# Netinfo [REQUIRED]
#   Specify various network-related information and settings
#
# Required tokens:
#  name             - Network's name where Denora is running on
#
# Optional tokens:
#  numeric          - Numeric ID
#                     Sets the numeric Denora should have. If your IRCd
#                     has a numeric, Denora will need one too. Consult
#                     your ircd's documentation before using this.
#  nickchar         - Sets the nickchar encoding for UnrealIRCd 3.2
#                     Only needed if you use that ircd. See the Unreal
#                     documentation for more information about this.
#  hiddenprefix     - Prefix for hidden hosts on P10-based ircds
#  hiddensuffix     - Suffix for hidden hosts on P10-based ircds
#  ctcpusers        - Get the CTCP version from users
#                     The users connecting to your network will receive
#                     a ctcp version request from the Denora bot.
#  ctcpeob          - Disable CTCP during burst
#                     Avoid sending out ctcp requests to users during burst.
#                     This is only useful if you restart Denora often and
#                     don't want to annoy your users.
#                     "ctcpusers" still needs to be enabled.
#  largenet         - Disable extended features
#                     This will do everything what "nonicktracking" does,
#                     and additionally disable: chanstats, host lookup, tld,
#                     ctcpusers, statserv alias, motd, server bans, channel
#                     bans, server uptime and server version.
#                     We don't recommend using this. It's only done for
#                     people who use a remote SQL database and really need
#                     to reduce the query load.
#  ustatsregistered - Only track registered users
#                     Enable this to only track registered (+r or account)
#                     users in chanstats. This will reduce the risk of nick
#                     confusion and require users to register to services
#                     in order to be tracked by chanstats.
#  ustatsnobots     - This will exclude all users with mode +B from chanstats
#  sphtml           - Hide +s/+p channels from HTML stats
#                     This only applies for HTML output, not for SQL. To
#                     hide those channels from SQL, just use an appropriate
#                     database query.
#  excludeserv      - Exclude any user from this server
#                     This only applies for HTML output, not for SQL. To
#                     hide those servers from SQL, just use an appropriate
#                     database query.
#  statspage        - URL for Web Stats
#                     This will be advertised in the Denora reply to the
#                     STATS command. Put a link to your HTML output file,
#                     or to phpDenora, for example.

netinfo {
    // required tokens
    name        "LocalNet";

    // optional tokens
    #numeric     "22";
    #nickchar    "latin1";
    #hiddenprefix "";
    #hiddensuffix ".users.mynet.tld"; 
    ctcpusers;
    #ctcpeob;
    #nonicktracking;
    #largenet;
    ustatsregistered;
    ustatsnobots;
    #sphtml;
    #excludeserv "services.yournet.net";
    #statspage "http://www.yoururlhere.net/stats.html";
};

###########################################################################
# Timeout [REQUIRED]
#   Specify various timeout options for performing certain operations
#
# Note: the timeout values are not an absolute limit on the period between
# checks of the timeout list: the period may be as great as the read token
# during periods of inactivity.
#
# Required tokens:
#  read        - Period for reading from network.
#  warning     - Interval for sending messages for program errors.
#                This token sets the interval between sending warning
#                messages for program errors via WALLOPS/GLOBOPS.
#  update      - Time between saving long term data to disk
#  htmlupdate  - Time between exporting the html files
#  pingfreq    - Time between pinging servers to check for lag
#  uptimefreq  - Time between uptime servers to check
#  sqlfreq     - Time between checking if the sql server is there
#  clearinactive     - Clear inactive users from chanstats
#  clearchaninactive - Clear inactive channels from chanstats
#  usercache   - The amount of time which we must keep users in the user
#                table. Since users connect/disconnect very often, it is
#                reasonable to keep this at a low value such as 2 days to
#                avoid filling the table with too much data.
#                If using applications that rely on user information, such
#                as a Denora module or phpDenora, it is recommended to set
#                this to a higher value such as 30 days, if possible.
#  userfreq    - How often (in seconds) to check for obsoleted users?
#                This shouldn't be set any higher than 10 seconds, and 1
#                second is best if your system is powerful enough (or your
#                network small enough) to handle it. 0 will cause the
#                timeout list to be checked every time through the main
#                loop, which will probably slow down Stats too much to be
#                useful on most networks.
#  servercache - The amount of time which we must keep servers in the
#                server table.  Since servers split are uncommon, we keep
#                them for a week.
#                If using applications that rely on server information,
#                such as a Denora module or phpDenora, it is recommended to
#                set this to a higher value such as 30 days, if possible.
#  serverfreq  - How often (in seconds) to check for obsoleted servers?
#                This shouldn't be set any higher than 10 seconds, and 1
#                second is best if your system is powerful enough (or your
#                network small enough) to handle it. 0 will cause the
#                timeout list to be checked every time through the main
#                loop, which will probably slow down Stats too much to be
#                useful on most networks.

timeout {
    // required tokens
    read        5s;
    warning     4h;
    update      2m;
    htmlupdate  2m;
    pingfreq    2m;
    uptimefreq  1d;
    sqlfreq     5m;
    clearinactive 30d;
    clearchaninactive 30d;
    usercache   2d;
    userfreq    10s;
    servercache 7d;
    serverfreq  5s;
};

###########################################################################
# Options [OPTIONAL]
#   Configures various options for Denora itself.
#
# Optional tokens:
#  keeplogs    - Number of days log files are kept
#                This sets the number of days log files are kept. If you
#                don't give it, or if you set it to 0, logs will be kept
#                indefinitely. NOTE: Denora must run 24 hours a day for
#                this feature to work.
#  logchan     - Channel used for Denora for output logs.
#                When defined, Denora will output log messages to this
#                channel. IMPORTANT: This can be a security risk so make
#                certain this channel is sufficiently protected from normal
#                access.
#  dumpcore    - Dump core on segmentation faults.
#                This will make Denora dump core when a segmentation fault
#                occurs. This is generally not needed, but if Denora is
#                crashing on your network and you want to make a bug
#                report, having a core file may be of great help.
#  hidestatso  - Only show stats o to IRC Operators.
#  tokens      - Allows IRC Networks to use TOKEN commands.
#                This allows IRC networks to use TOKEN commands instead of
#                the standard commands. This saves bandwidth.
#  ts6         - Use TS6 code on IRCD that use it
#  chanstatsdef - Default flag for ChanStats Fantasy commands
#                   off = default
#                   on  = enabled but will message the results
#                   notice = enabled and will notice the results
#  smiley      - Default smileys used by chanstats
#  hideuline   - hide ulines from hmtl/xml output
#  nologs      - only use if you want NO log files
#  trigger     - character to use for triggering chanstats
#  jupemaster  - name of the server who issues JUPE so leafs can be ignored

options {
    // optional tokens
    keeplogs     7;
    #logchan      "#denora";
    #dumpcore;
    #hidestatso;
    #tokens;
    #ts6;
    #chanstatsdef "off";
    #smiley " :) ;) :-) ;-) ^_^ :-D :D :-P :P =) ;D :p ";
    #hideuline;
    #nologs;
    #trigger "!";
    #jupemaster "services.your.net";
};

###########################################################################
# Admin [RECOMMENDED]
#  Define the users that will be able to login to the Denora pseudoclient
#
#  There may be multiple Admin block.
#
#  NOTE: a user must be opered to the ircd to be able to login to Denora
#
# Required tokens:
#  name        - Admin username
#  passwd      - Admin password
#  hostname    - Admin hostmask
#
# Optional tokens:
#  language    - Admin language
#                Currently supported languages:
#                  English : 1
#                  Spanish : 2
#                  German  : 3
#                  French  : 4
#                  Dutch   : 5
#                  Italian : 6
#                  Russian : 7
#                If not set, the default language will be used.

admin {
    // required tokens
    name        "DrStein";
    passwd      "superpass";
    hostname    "*@*";

    // optional tokens
    #language    1;
};

admin {
    name        "Hal9000";
    passwd      "lamepass";
    hostname    "Hal9000@*";
};

###########################################################################
# SQL [OPTIONAL]
#   Your SQL configuration for use with Denora.
#
# To make use of SQL use these tokens and change their setting to the
# appropriate values.
#       
# Please read docs/MYSQL file for more info and details.
#
# Required tokens:
#  type        - SQL server type.
#                Available options:
#                  mysql
#                NOTE: Denora supports MySQL. Future versions may support
#                other SQL technologies.
#  host        - SQL server hostname.
#  user        - SQL user to log in with.
#  passwd      - SQL pass required for the specified user to log in.
#  name        - SQL database name Denora uses
#
# Optional tokens:
#  sock        - MySQL UNIX socket
#  port        - MySQL TCP port
#  retryonlost - Attempt to reconnect sql even if we lost the server
#  retries     - Number of retry attempts
#  retrygap    - Time gap between each retry attempt
#                The product of these values must be between 1 and 60.
#  disableopt  - Use with caution, only enable this if you are having
#                problems with mysql and zlib functions
#  keepusers   - Do not truncate the users table on startup
#                Use this only in combination with the "usercache" setting!
#                Only enable this if you really need it.
#  keepservers - Do not truncate the server table on startup
#                Use this only in combination with the "servercache"
#                setting! Only enable this if you really need it.

sql {
    // required tokens
    type        mysql;
    host        localhost;
    user        anonymous;
    passwd      password;
    name        denora;

    // optional tokens
    #sock        /tmp/mysql.sock;
    #port        3306;
    #retryonlost 0;
    #retries     6;
    #retrygap    10;
    #disableopt;
    #keepusers;
    #keepservers;
};

###########################################################################
# Tables [REQUIRED]
#   Sets the various SQL table names.
#
# Don't change the default values unless really needed!

tables {
    // required tokens
    users       user;          # Name of the Users table
    chanbans    chanbans;      # Name of the Channel Bans table
    chanexcept  chanexcept;    # Name of the Channel Exceptions table
    ison        ison;          # Name of the ISON table
    server      server;        # Name of the Servers table
    gline       glines;        # Name of the Glines table
    chan        chan;          # Name of the Channel table
    maxvalue    maxvalues;     # Name of the Maxvalues table
    chaninvite  chaninvites;   # Name of the Channel Invites table
    tld         tld;           # Name of the TLD table
    ctcp        ctcp;          # Name of the CTCP table
    sqline      sqline;        # Name of the SQLine table
    sgline      sgline;        # Name of the SGLine table
    csaliases   aliases;       # Name of the Chan Stats Aliases table
    cscstats    cstats;        # Name of the Chan Stats Channel table
    csustats    ustats;        # Name of the Chan Stats User table
    stats       stats;         # Name of the Hourly stats table
    spamfilter  spamfilters;   # Name of the Spam Filter Table
    current     current;       # Name of the table which holds the current info
    chanstats   channelstats;  # Name of the Channel Stats by Hour
    servstats   serverstats;   # Name of the Server Stats by Hour
    chanquiet   chanquiet;     # Name of the Channel Quiet table
    admins      admin;         # Name of the Admins table
};

###########################################################################
# Modules [OPTIONAL]
#   Allows Denora's functionality to be extended by loading modules.
#
# Please read docs/MODULES file for more info and details.
#
# Optional tokens:
#  autoload    - Name of the module to load on startup.
#                There can be up to 128 autoload tokens.
#  delayed     - Name of the module to load once Denora is already
#                connected to the IRCd.
#                There can be up to 128 delayed tokens.

modules {
    // optional tokens
    #autoload   ss_uptime;
    #autoload   next_module;
    #delayed    irc_delay_example;
    #delayed    mysql_optimize;
    #delayed    mysql_backup;
};

###########################################################################
# XML RPC [OPTIONAL]
#   XML RPC is a lightweight Server/Parser allowing user to send XMLRPC
#   data to Denora and have the data returned in the XMLRPC standard.
#
# Please read docs/XMLRPC file for more info and details.
#
# Required tokens:
#  xmlrpc_enable - You must set this for XMLRPC to start
#
# Optional tokens:
#  xmlrpc_host   - IP address to have the XMLRPC server on
#  xmlrpc_port   - Port on which to listen to
#  xmlrpc_accept - Accept only data from these hosts.
#                  There can be up to 128 client host addresses.

xmlrpc {
    #xmlrpc_enable;
    #xmlrpc_host 127.0.0.1;
    #xmlrpc_port 8080;
    #xmlrpc_accept 127.0.0.1;
    #xmlrpc_accept 192.168.0.1;
};
